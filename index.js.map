{"version":3,"file":"index.js","sources":["source/MessagePortTarget.js","source/utils.js","source/MessagePortEvent.js","source/MessagePortDispatcher.js"],"sourcesContent":["export class MessagePortTarget {\n  constructor(sender, receiver) {\n    this.sender = sender || [];\n    this.receiver = receiver || [];\n\n    if (!(this.sender instanceof Array)) {\n      this.sender = [this.sender];\n    }\n\n    if (!(this.receiver instanceof Array)) {\n      this.receiver = [this.receiver];\n    }\n  }\n\n  /*\n    @param data\n    @param origin\n  */\n  postMessage(...args) {\n    this.sender.forEach((item) => item.postMessage(...args));\n  }\n\n  addEventListener(type, handler) {\n    this.receiver.forEach((item) => item.addEventListener(type, handler));\n  }\n\n  removeEventListener(type, handler) {\n    this.receiver.forEach((item) => item.removeEventListener(type, handler));\n  }\n}\n\nexport default MessagePortTarget;\n","/**\n * Created by Oleg Galaburda on 09.02.16.\n */\nimport { isObject } from '@actualwave/event-dispatcher';\n\nexport const createId = () => `MP/${Math.ceil(Math.random() * 10000)}/${Date.now()}`;\n\n/**\n * If toJSON method implemented on object, it will be called instead of converting to JSON string.\n * This was made to utilize structured cloning algorithm for raw objects.\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n * In this case developer is responsible for converting linked objects.\n * @param object\n * @returns {Object}\n */\nexport const toRawData = (object) => {\n  if (typeof object.toJSON === 'function') {\n    return object.toJSON();\n  }\n\n  return JSON.stringify(object);\n};\n\n/**\n *\n * @param data {Object|String}\n * @returns {Object}\n */\nexport const parseRawData = (data) => {\n  let object; // keep it undefined in case of error\n\n  if (isObject(data)) {\n    return data;\n  }\n\n  try {\n    return JSON.parse(data);\n  } catch (error) {\n    // this isn't an event we are waiting for.\n  }\n\n  return object;\n};\n","/**\n * Created by Oleg Galaburda on 09.02.16.\n */\nimport hasOwn from '@actualwave/has-own';\nimport { isObject } from '@actualwave/event-dispatcher';\nimport { toRawData, parseRawData } from './utils';\n\nexport class MessagePortEvent {\n  constructor(event, dispatcherId) {\n    this.event = event;\n    this.dispatcherId = dispatcherId;\n  }\n\n  toJSON() {\n    return {\n      event: toRawData(this.event),\n      dispatcherId: this.dispatcherId,\n    };\n  }\n}\n\nexport const isMessagePortEvent = (object) =>\n  isObject(object) && hasOwn(object, 'dispatcherId') && hasOwn(object, 'event');\n\nexport const parseMessagePortEvent = (object) => {\n  const result = parseRawData(object);\n\n  if (result && isMessagePortEvent(result)) {\n    const { event, dispatcherId } = result;\n    return new MessagePortEvent(parseRawData(event), dispatcherId);\n  }\n\n  return null;\n};\n","/**\n * Created by Oleg Galaburda on 09.02.16.\n */\n/* eslint-disable no-restricted-globals */\n\nimport { createEventDispatcher, getEvent } from '@actualwave/event-dispatcher';\nimport { MessagePortEvent, parseMessagePortEvent } from './MessagePortEvent';\nimport { createId, toRawData } from './utils';\n\nexport class MessagePortDispatcher {\n  dispatcherId = createId();\n\n  targetOrigin = '*';\n\n  constructor(\n    target = null,\n    customPostMessageHandler = null,\n    receiverEventPreprocessor = null,\n    senderEventPreprocessor = null,\n  ) {\n    this.target = target || self;\n    this.customPostMessageHandler = customPostMessageHandler;\n    this.senderEventPreprocessor = senderEventPreprocessor;\n    this.sender = createEventDispatcher();\n    this.receiver = createEventDispatcher(receiverEventPreprocessor);\n\n    this.target.addEventListener('message', (event) => this._postMessageListener(event));\n  }\n\n  addEventListener(eventType, listener, priority) {\n    this.receiver.addEventListener(eventType, listener, priority);\n  }\n\n  hasEventListener(eventType) {\n    return this.receiver.hasEventListener(eventType);\n  }\n\n  removeEventListener(eventType, listener) {\n    this.receiver.removeEventListener(eventType, listener);\n  }\n\n  removeAllEventListeners(eventType) {\n    this.receiver.removeAllEventListeners(eventType);\n  }\n\n  dispatchEvent(eventType, data, transferList) {\n    let event = getEvent(eventType, data);\n\n    if (this.senderEventPreprocessor) {\n      event = this.senderEventPreprocessor.call(this, event);\n    }\n\n    const eventJson = toRawData(new MessagePortEvent(event, this.dispatcherId));\n\n    return this._postMessageHandler(eventJson, transferList);\n  }\n\n  /**\n   * @private\n   */\n  _postMessageHandler(data, transferList) {\n    const handler = this.customPostMessageHandler;\n\n    if (handler) {\n      return handler.call(this, data, this.targetOrigin, transferList);\n    }\n\n    return this.target.postMessage(data, this.targetOrigin, transferList);\n  }\n\n  /**\n   * @private\n   */\n  _postMessageListener(event) {\n    // INFO .nativeEvent react-native thing, it contains event object coming from WebView\n    event = event.nativeEvent || event;\n    const message = parseMessagePortEvent(event.data);\n\n    if (message) {\n      if (message.dispatcherId === this.dispatcherId) {\n        this.sender.dispatchEvent(message.event);\n      } else {\n        this.receiver.dispatchEvent(message.event);\n      }\n    }\n  }\n}\n\nexport const createMessagePortDispatcher = (\n  target,\n  customPostMessageHandler,\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n) =>\n  new MessagePortDispatcher(\n    target,\n    customPostMessageHandler,\n    receiverEventPreprocessor,\n    senderEventPreprocessor,\n  );\n\nconst factory = (getTarget, dispatcher = null) => () => {\n  if (!dispatcher) {\n    dispatcher = createMessagePortDispatcher(getTarget());\n  }\n\n  return dispatcher;\n};\n\nexport const getForSelf = factory(() => self);\n\nexport const getForParent = factory(() => parent);\n\nexport const getForTop = factory(() => top);\n"],"names":["MessagePortTarget","constructor","sender","receiver","Array","postMessage","args","forEach","item","addEventListener","type","handler","removeEventListener","createId","Math","ceil","random","Date","now","toRawData","object","toJSON","JSON","stringify","parseRawData","data","isObject","parse","error","MessagePortEvent","event","dispatcherId","isMessagePortEvent","hasOwn","parseMessagePortEvent","result","MessagePortDispatcher","target","customPostMessageHandler","receiverEventPreprocessor","senderEventPreprocessor","targetOrigin","self","createEventDispatcher","_postMessageListener","eventType","listener","priority","hasEventListener","removeAllEventListeners","dispatchEvent","transferList","getEvent","call","eventJson","_postMessageHandler","nativeEvent","message","createMessagePortDispatcher","factory","getTarget","dispatcher","getForSelf","getForParent","parent","getForTop","top"],"mappings":"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"}