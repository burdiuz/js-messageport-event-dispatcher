{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 59706d5d11cce0aed7f6","webpack:///./source/MessagePortDispatcher.js","webpack:///./~/event-dispatcher/source/EventDispatcher.js","webpack:///./~/event-dispatcher/source/index.js","webpack:///./source/index.js"],"names":["MessagePortEvent","event","dispatcherId","MessagePortDispatcher","toJSON","object","result","parse","isEvent","isObject","Object","prototype","hasOwnProperty","call","target","customPostMessageHandler","receiverEventPreprocessor","senderEventPreprocessor","noInit","initiallize","self","_handlers","sender","create","receiver","Math","ceil","random","Date","now","targetOrigin","addEventListener","bind","hasEventListener","removeEventListener","removeAllEventListeners","_messageEventListener","eventType","data","transferList","getEvent","eventJson","_postMessageHandler","handler","postMessage","nativeEvent","message","dispatchEvent","objectJson","JSON","stringify","error","factory","getTarget","dispatcher","parent","top","hasOwnProp","name","Event","type","defaultPrevented","EventListeners","_listeners","priority","parseInt","getPrioritiesByKey","key","String","value","handlers","createList","indexOf","push","priorities","list","getOwnPropertyNames","length","index","handlerIndex","splice","_stopped","_immediatelyStopped","stopPropagation","stopImmediatePropagation","sort","a","b","handlersLength","handlersIndex","EventDispatcher","eventPreprocessor","initialize","_eventPreprocessor","listener","add","has","remove","removeAll","eventObject","eventOrType","optionalData"],"mappings":"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","file":"messageport-dispatcher.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MessagePortDispatcher\"] = factory();\n\telse\n\t\troot[\"MessagePortDispatcher\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://localhost:8081/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59706d5d11cce0aed7f6","/**\r\n * Created by Oleg Galaburda on 09.02.16.\r\n */\r\n\r\nimport EventDispatcher from 'event-dispatcher';\r\n\r\nimport type {\r\n  EventObject,\r\n  EventListener,\r\n  EventProcessor,\r\n  PostMessage,\r\n  IMessagePortEvent,\r\n  MessagePortTarget,\r\n} from './TypeDefinition';\r\n\r\nexport class MessagePortEvent implements IMessagePortEvent {\r\n  constructor(event: EventObject, dispatcherId: string) {\r\n    this.event = event;\r\n    this.dispatcherId = dispatcherId;\r\n  }\r\n\r\n  toJSON(): IMessagePortEvent {\r\n    return {\r\n      /* eslint no-use-before-define:0 */\r\n      event: MessagePortDispatcher.toJSON(this.event),\r\n      dispatcherId: this.dispatcherId,\r\n    };\r\n  }\r\n\r\n  static parse(object: mixed): string {\r\n    /* eslint no-use-before-define:0 */\r\n    let result = MessagePortDispatcher.parse(object);\r\n    if (MessagePortEvent.isEvent(result)) {\r\n      /* eslint no-use-before-define:0 */\r\n      result.event = MessagePortDispatcher.parse(result.event);\r\n    } else {\r\n      result = null;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static isEvent(object) {\r\n    return EventDispatcher.isObject(object) &&\r\n      Object.prototype.hasOwnProperty.call(object, 'dispatcherId') &&\r\n      Object.prototype.hasOwnProperty.call(object, 'event');\r\n  }\r\n}\r\n\r\ntype StaticGlobalDispatcher = ()=> MessagePortDispatcher;\r\ntype MPDispatcherInternals = {\r\n  customPostMessageHandler?: PostMessage,\r\n  senderEventPreprocessor?: EventProcessor\r\n};\r\n\r\nexport class MessagePortDispatcher extends EventDispatcher {\r\n  _handlers: MPDispatcherInternals;\r\n  sender: EventDispatcher;\r\n  receiver: EventDispatcher;\r\n  dispatcherId: string;\r\n  targetOrigin: string;\r\n  addEventListener: (type: string, handler: EventListener) => void;\r\n  hasEventListener: (eventType: string) => boolean;\r\n  removeEventListener: (eventType: string) => void;\r\n  removeAllEventListeners: (eventType: string) => void;\r\n\r\n  /**\r\n   *\r\n   * @param target {Window|Worker|MessagePort}\r\n   * @param customPostMessageHandler {?Function} Function that receive message object\r\n   *        and pass it to MessagePort.postMessage()\r\n   * @param receiverEventPreprocessor {?Function} Function that pre-process\r\n   *        all events received from MessagePort, before passing to listeners\r\n   * @param senderEventPreprocessor Function that pre-process all events sent\r\n   *        to MessagePort\r\n   * @constructor\r\n   */\r\n  constructor(\r\n    target: MessagePortTarget,\r\n    customPostMessageHandler?: PostMessage = null,\r\n    receiverEventPreprocessor?: EventProcessor = null,\r\n    senderEventPreprocessor: EventProcessor = null,\r\n    noInit = false,\r\n  ) {\r\n    super(null, true);\r\n    if (!noInit) {\r\n      this.initiallize(\r\n        target,\r\n        customPostMessageHandler,\r\n        receiverEventPreprocessor,\r\n        senderEventPreprocessor,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  initiallize(\r\n    target,\r\n    customPostMessageHandler,\r\n    receiverEventPreprocessor,\r\n    senderEventPreprocessor,\r\n  ) {\r\n    this.target = target || self;\r\n    this._handlers = {\r\n      customPostMessageHandler,\r\n      senderEventPreprocessor,\r\n    };\r\n    this.sender = EventDispatcher.create();\r\n    this.receiver = EventDispatcher.create(receiverEventPreprocessor);\r\n    this.dispatcherId = `MP/${Math.ceil(Math.random() * 10000)}/${Date.now()}`;\r\n    this.targetOrigin = '*';\r\n    this.addEventListener = this.receiver.addEventListener.bind(this.receiver);\r\n    this.hasEventListener = this.receiver.hasEventListener.bind(this.receiver);\r\n    this.removeEventListener = this.receiver.removeEventListener.bind(this.receiver);\r\n    this.removeAllEventListeners = this.receiver.removeAllEventListeners.bind(this.receiver);\r\n\r\n    target.addEventListener('message', this._messageEventListener.bind(this));\r\n  }\r\n\r\n  dispatchEvent(eventType, data, transferList) {\r\n    let event = EventDispatcher.getEvent(eventType, data);\r\n    if (this._handlers.senderEventPreprocessor) {\r\n      event = this._handlers.senderEventPreprocessor.call(this, event);\r\n    }\r\n    const eventJson = MessagePortDispatcher.toJSON(\r\n      new MessagePortEvent(event, this.dispatcherId),\r\n    );\r\n    this._postMessageHandler(eventJson, transferList);\r\n  }\r\n\r\n  _postMessageHandler(data, transferList) {\r\n    const handler = this._handlers.customPostMessageHandler;\r\n    if (handler) {\r\n      handler.call(this, data, this.targetOrigin, transferList);\r\n    } else {\r\n      this.target.postMessage(data, this.targetOrigin, transferList);\r\n    }\r\n  }\r\n\r\n  _messageEventListener(event) {\r\n    // fixme .nativeEvent react-native thing, need a way to find out keep it or exclude\r\n    event = event.nativeEvent || event;\r\n    const message = MessagePortEvent.parse(event.data);\r\n    if (message) {\r\n      if (message.dispatcherId === this.dispatcherId) {\r\n        this.sender.dispatchEvent(message.event);\r\n      } else {\r\n        this.receiver.dispatchEvent(message.event);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If toJSON method implemented on object, it will be called instead of converting to JSON string.\r\n   * This was made to utilize structured cloning algorithm for raw objects.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\r\n   * In this case developer is responsible for converting linked objects.\r\n   * @param object\r\n   * @returns {Object|String}\r\n   */\r\n  static toJSON(object) {\r\n    let objectJson;\r\n    if (typeof (object.toJSON) === 'function') {\r\n      objectJson = object.toJSON();\r\n    } else {\r\n      objectJson = JSON.stringify(object);\r\n    }\r\n    return objectJson;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data {Object|String}\r\n   * @returns {Object}\r\n   */\r\n  static parse(data) {\r\n    let object; // keep it undefined in case of error\r\n    if (EventDispatcher.isObject(data)) {\r\n      object = data;\r\n    } else {\r\n      try {\r\n        object = JSON.parse(data);\r\n      } catch (error) {\r\n        // this isn't an event we are waiting for.\r\n      }\r\n    }\r\n    return object;\r\n  }\r\n\r\n  static create(\r\n    target,\r\n    customPostMessageHandler,\r\n    receiverEventPreprocessor,\r\n    senderEventPreprocessor,\r\n  ) {\r\n    return new MessagePortDispatcher(\r\n      target,\r\n      customPostMessageHandler,\r\n      receiverEventPreprocessor,\r\n      senderEventPreprocessor,\r\n    );\r\n  }\r\n\r\n  static self: StaticGlobalDispatcher;\r\n  static parent: StaticGlobalDispatcher;\r\n  static top: StaticGlobalDispatcher;\r\n}\r\n\r\nconst factory = (\r\n  getTarget: () => MessagePortTarget,\r\n  dispatcher: MessagePortDispatcher = null,\r\n): StaticGlobalDispatcher => (): MessagePortDispatcher => {\r\n  if (!dispatcher) {\r\n    dispatcher = MessagePortDispatcher.create(getTarget());\r\n  }\r\n  return dispatcher;\r\n};\r\n\r\nMessagePortDispatcher.self = factory(() => self);\r\nMessagePortDispatcher.parent = factory(() => parent);\r\nMessagePortDispatcher.top = factory(() => top);\r\nMessagePortDispatcher.MessagePortEvent = MessagePortEvent;\r\n\r\nexport default MessagePortDispatcher;\r\n\n\n\n// WEBPACK FOOTER //\n// ./source/MessagePortDispatcher.js","/**\r\n * Created by Oleg Galaburda on 09.02.16.\r\n * @flow\r\n */\r\n\r\nimport type { EventObject, EventType, EventListener, EventProcessor } from './TypeDefinition';\r\n\r\nconst hasOwnProp = (target: any, name: string): boolean => (\r\n  Object.prototype.hasOwnProperty.call(target, name)\r\n);\r\n\r\nexport class Event {\r\n\r\n  type: string;\r\n  data: mixed;\r\n  defaultPrevented: boolean;\r\n  stopPropagation: ?Function;\r\n  stopImmediatePropagation: ?Function;\r\n\r\n  constructor(type: string, data: mixed) {\r\n    this.type = type;\r\n    this.data = data || null;\r\n    this.defaultPrevented = false;\r\n  }\r\n\r\n  toJSON(): EventObject {\r\n    return { type: this.type, data: this.data };\r\n  }\r\n\r\n  isDefaultPrevented(): boolean {\r\n    return this.defaultPrevented;\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\ntype EventPrioritiesCollection = {\r\n  [priority:string]: Array<EventListener>;\r\n}\r\n\r\ntype EventTypesCollection = {\r\n  [eventType:string]: EventPrioritiesCollection;\r\n}\r\n\r\nclass EventListeners {\r\n\r\n  _listeners: EventTypesCollection;\r\n\r\n  constructor() {\r\n    /**\r\n     * key - event Type\r\n     * value - hash of priorities\r\n     *    key - priority\r\n     *    value - list of handlers\r\n     * @type {Object<string, Object.<string, Array<number, Function>>>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n  }\r\n\r\n  createList(eventType: string, priority: number): Array<EventListener> {\r\n    priority = parseInt(priority, 10);\r\n    const target: EventPrioritiesCollection = this.getPrioritiesByKey(eventType);\r\n    const key: string = String(priority);\r\n    let value: Array<EventListener>;\r\n    if (hasOwnProp(target, key)) {\r\n      value = target[key];\r\n    } else {\r\n      value = [];\r\n      target[key] = value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  getPrioritiesByKey(key: string): EventPrioritiesCollection {\r\n    let value: EventPrioritiesCollection;\r\n    if (hasOwnProp(this._listeners, key)) {\r\n      value = this._listeners[key];\r\n    } else {\r\n      value = {};\r\n      this._listeners[key] = value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  add(eventType: string, handler: EventListener, priority: number) {\r\n    const handlers = this.createList(eventType, priority);\r\n    if (handlers.indexOf(handler) < 0) {\r\n      handlers.push(handler);\r\n    }\r\n  }\r\n\r\n  has(eventType: string): boolean {\r\n    let priority: string;\r\n    let result = false;\r\n    const priorities = this.getPrioritiesByKey(eventType);\r\n    if (priorities) {\r\n      for (priority in priorities) {\r\n        if (hasOwnProp(priorities, priority)) {\r\n          result = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  remove(eventType: string, handler) {\r\n    const priorities = this.getPrioritiesByKey(eventType);\r\n    if (priorities) {\r\n      const list = Object.getOwnPropertyNames(priorities);\r\n      const length = list.length;\r\n      for (let index = 0; index < length; index++) {\r\n        const priority = list[index];\r\n        const handlers = priorities[priority];\r\n        const handlerIndex = handlers.indexOf(handler);\r\n        if (handlerIndex >= 0) {\r\n          handlers.splice(handlerIndex, 1);\r\n          if (!handlers.length) {\r\n            delete priorities[priority];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAll(eventType: string) {\r\n    delete this._listeners[eventType];\r\n  }\r\n\r\n  call(event: EventObject, target: any) {\r\n    let handler: EventListener;\r\n    let _stopped = false;\r\n    let _immediatelyStopped = false;\r\n    const stopPropagation = () => {\r\n      _stopped = true;\r\n    };\r\n    const stopImmediatePropagation = () => {\r\n      _immediatelyStopped = true;\r\n    };\r\n    event.stopPropagation = stopPropagation;\r\n    event.stopImmediatePropagation = stopImmediatePropagation;\r\n    const priorities = this.getPrioritiesByKey(event.type, this._listeners);\r\n    if (priorities) {\r\n      // getOwnPropertyNames() or keys()?\r\n      const list: string[] = Object.getOwnPropertyNames(priorities).sort(\r\n        (a: any, b: any) => (a - b),\r\n      );\r\n      const length = list.length;\r\n      for (let index = 0; index < length; index++) {\r\n        if (_stopped) break;\r\n        const handlers: Array<EventListener> = priorities[list[index]];\r\n        const handlersLength = handlers.length;\r\n        for (let handlersIndex = 0; handlersIndex < handlersLength; handlersIndex++) {\r\n          if (_immediatelyStopped) break;\r\n          handler = handlers[handlersIndex];\r\n          handler.call(target, event);\r\n        }\r\n      }\r\n    }\r\n    delete event.stopPropagation;\r\n    delete event.stopImmediatePropagation;\r\n  }\r\n}\r\n\r\nclass EventDispatcher {\r\n\r\n  _listeners: EventListeners;\r\n  _eventPreprocessor: EventProcessor;\r\n\r\n  constructor(eventPreprocessor: EventProcessor, noInit: boolean = false) {\r\n    if (!noInit) {\r\n      this.initialize(eventPreprocessor);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  initialize(eventPreprocessor: EventProcessor) {\r\n    this._eventPreprocessor = eventPreprocessor;\r\n    this._listeners = new EventListeners();\r\n  }\r\n\r\n  addEventListener(eventType: string, listener: EventListener, priority: number = 0) {\r\n    this._listeners.add(eventType, listener, -priority || 0);\r\n  }\r\n\r\n  hasEventListener(eventType: string) {\r\n    return this._listeners.has(eventType);\r\n  }\r\n\r\n  removeEventListener(eventType: string, listener: EventListener) {\r\n    this._listeners.remove(eventType, listener);\r\n  }\r\n\r\n  removeAllEventListeners(eventType: string) {\r\n    this._listeners.removeAll(eventType);\r\n  }\r\n\r\n  dispatchEvent(event: EventType, data: mixed) {\r\n    let eventObject = EventDispatcher.getEvent(event, data);\r\n    if (this._eventPreprocessor) {\r\n      eventObject = this._eventPreprocessor.call(this, eventObject);\r\n    }\r\n    this._listeners.call(eventObject);\r\n  }\r\n\r\n  static isObject(value: mixed) {\r\n    return (typeof value === 'object') && (value !== null);\r\n  }\r\n\r\n  static getEvent(eventOrType: EventType, optionalData: mixed): EventObject {\r\n    let event = eventOrType;\r\n    if (!EventDispatcher.isObject(eventOrType)) {\r\n      event = new EventDispatcher.Event(String(eventOrType), optionalData);\r\n    }\r\n    return (event:any);\r\n  }\r\n\r\n  static create(eventPreprocessor: EventProcessor) {\r\n    return new EventDispatcher(eventPreprocessor);\r\n  }\r\n\r\n  /* eslint no-undef: \"off\" */\r\n  static Event: Class<Event>;\r\n}\r\n\r\nEventDispatcher.Event = Event;\r\n\r\nexport default EventDispatcher;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/event-dispatcher/source/EventDispatcher.js","import EventDispatcher, { Event } from './EventDispatcher';\r\n\r\nexport default EventDispatcher;\r\nexport { Event };\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/event-dispatcher/source/index.js","import MessagePortDispatcher, { MessagePortEvent } from './MessagePortDispatcher';\r\n\r\nexport default MessagePortDispatcher;\r\nexport { MessagePortEvent };\r\n\n\n\n// WEBPACK FOOTER //\n// ./source/index.js"],"sourceRoot":""}